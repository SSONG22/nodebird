{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/songi/Documents/nodebird/front/store/configureStore.js"],"names":["createStore","compose","applyMiddleware","createWrapper","reducer","composeWithDevTools","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,QAAb,QAAaA,QAAb;AAAA,SAA4B,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AACzEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACD,KAHoD;AAAA,GAA5B;AAAA,CAAzB;;AAIA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;AACA,MAAMU,QAAQ,GACZ,QACIjB,OAAO,CAACC,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADX,GAEIZ,mBAAmB,CAACH,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAHzB;AAIA,MAAME,KAAK,GAAGnB,WAAW,CAACI,OAAD,EAAUc,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACD,CAVD;;AAYA,IAAMG,OAAO,GAAGnB,aAAa,CAACY,cAAD,EAAiB;AAC5CQ,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  console.log(action);\n  return next(action);\n};\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}