{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null\n  },\n  post: {\n    mainPosts: []\n  }\n}; //action\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return {\n    type: 'LOG_OUT'\n  };\n}; // (이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: {\n          user: nul,\n          isLoggedIn: false\n        }\n      });\n\n    default:\n      return state;\n  }\n}; // reducer 는 함수 \n\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/songi/Documents/nodebird/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","post","mainPosts","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload","nul"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,YAAY,GAAC;AACfC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE;AAFJ,GADS;AAMfE,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AANS,CAAnB,C,CAWA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAM;AACFD,IAAAA,IAAI,EAAE;AADJ,GAAN;AAGH,CAJM,C,CAMP;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBV,YAAwB;AAAA,MAAVW,MAAU;;AACjD,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAKR,OAAL;AACIa,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,6CAAWD,KAAX,GAAqBC,MAAM,CAACG,OAA5B;;AACJ,SAAK,QAAL;AACI,6CACOJ,KADP;AAEIT,QAAAA,IAAI,kCACGS,KAAK,CAACT,IADT;AAEAC,UAAAA,UAAU,EAAE;AAFZ;AAFR;;AAOJ,SAAK,SAAL;AACI,6CACOQ,KADP;AAEIT,QAAAA,IAAI,EAAG;AACHA,UAAAA,IAAI,EAAEc,GADH;AAEHb,UAAAA,UAAU,EAAE;AAFT;AAFX;;AAOJ;AACI,aAAOQ,KAAP;AArBR;AAuBH,CAxBD,C,CAwBG;;;AAEH,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nconst initialState={\n    user :{\n        isLoggedIn: false,\n        user: null,\n\n    },\n    post :{\n        mainPosts :[],\n    },\n}\n\n//action\nexport const loginAction = (data) => {\n    return {\n        type: 'LOG_IN',\n        data,\n    }\n}\n\nexport const logoutAction = () => {\n    return{\n        type: 'LOG_OUT',\n    }\n}\n\n// (이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case HYDRATE:\n            console.log('HYDRATE', action);\n            return {...state, ...action.payload};\n        case 'LOG_IN':\n            return {\n                ...state,\n                user : {\n                    ...state.user,\n                    isLoggedIn: true,\n                }\n            };\n        case 'LOG_OUT':\n            return {\n                ...state,\n                user : {\n                    user: nul,\n                    isLoggedIn: false,\n                }\n            }\n        default:\n            return state;\n    }\n}; // reducer 는 함수 \n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}