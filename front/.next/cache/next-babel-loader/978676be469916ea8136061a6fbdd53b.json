{"ast":null,"code":"import { all, takeLatest, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000); // const result = yield call(logInAPI, action.data);\n\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\n\nfunction* logOut(action) {\n  try {} catch (err) {}\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["/Users/songi/Documents/nodebird/front/sagas/user.js"],"names":["all","takeLatest","put","axios","logInAPI","data","post","logIn","action","delay","type","err","response","watchLogIn","logOut","watchLogOut","userSaga","fork"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AACD,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMC,KAAK,CAAC,IAAD,CAAX,CADE,CAEF;;AACA,UAAMP,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERL,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERL,MAAAA,IAAI,EAAEM,GAAG,CAACC,QAAJ,CAAaP;AAFX,KAAD,CAAT;AAID;AACF;;AACD,UAAUQ,UAAV,GAAuB;AACrB,QAAMZ,UAAU,CAAC,gBAAD,EAAmBM,KAAnB,CAAhB;AACD;;AACD,UAAUO,MAAV,CAAiBN,MAAjB,EAAyB;AACvB,MAAI,CACH,CADD,CACE,OAAOG,GAAP,EAAY,CAAE;AACjB;;AACD,UAAUI,WAAV,GAAwB;AACtB,QAAMd,UAAU,CAAC,iBAAD,EAAoBa,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CAACiB,IAAI,CAACJ,UAAD,CAAL,EAAmBI,IAAI,CAACF,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    // const result = yield call(logInAPI, action.data);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: action.data,\n    });\n  } catch (err) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data,\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest(\"LOG_IN_REQUEST\", logIn);\n}\nfunction* logOut(action) {\n  try {\n  } catch (err) {}\n}\nfunction* watchLogOut() {\n  yield takeLatest(\"LOG_OUT_REQUEST\", logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n"]},"metadata":{},"sourceType":"module"}