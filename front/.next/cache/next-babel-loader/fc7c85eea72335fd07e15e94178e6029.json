{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Card, Popover, Button, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, SmileTwoTone } from \"@ant-design/icons\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id; //new!! optional changin 연산자\n  // const id = useSelector ((state)=>state.user.me?.id);\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(() => {\n    // console.log(liked);\n    setLiked(prev => !prev); //t->f f->t\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return __jsx(\"div\", null, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\"\n    }), !liked ? __jsx(HeartOutlined, {\n      key: \"heart\",\n      twoToneColor: \"#eb2f96\",\n      onClick: onToggleLike\n    }) : __jsx(SmileTwoTone, {\n      key: \"heart\",\n      onClick: onToggleLike\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      onClick: onToggleComment\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(ButtonGroup, null, id && post.User.id && __jsx(React.Fragment, null, __jsx(Button, null, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\"\n      }, \"\\uC0AD\\uC81C\")))\n    }, __jsx(EllipsisOutlined, null))]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content\n  })), commentFormOpened && __jsx(\"div\", null, __jsx(CommentForm, {\n    post: post\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", null, __jsx(Comment, {\n      author: item.User.nickname,\n      avatar: __jsx(Avatar, null, item.User.nickname[0]),\n      content: item.content\n    }))\n  })));\n};\n\nexport default PostCard;","map":null,"metadata":{},"sourceType":"module"}