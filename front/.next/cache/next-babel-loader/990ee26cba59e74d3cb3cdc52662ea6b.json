{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/songi/Documents/nodebird/front/store/configureStore.js"],"names":["createStore","compose","applyMiddleware","createWrapper","reducer","composeWithDevTools","configureStore","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GACZ,QACIP,OAAO,CAACC,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CADX,GAEIF,mBAAmB,CAACH,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAHzB;AAIA,QAAME,KAAK,GAAGT,WAAW,CAACI,OAAD,EAAUI,QAAV,CAAzB;AACA,SAAOC,KAAP;AACD,CARD;;AAUA,MAAMC,OAAO,GAAGP,aAAa,CAACG,cAAD,EAAiB;AAC5CK,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhancer =\n    process.env.NODE_ENV === \"production\"\n      ? compose(applyMiddleware(...middlewares))\n      : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}