{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/songi/Documents/nodebird/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id; //new!! optional changin 연산자\n  // const id = useSelector ((state)=>state.user.me?.id);\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(!liked);\n  }, [liked]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      image: post.images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), liked ? __jsx(HeartOutlined, {\n      key: \"heart\",\n      twoToneColor: \"#eb2f96\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(ButtonGroup, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, id && post.User.id && __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\"))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(PostCard, \"l1Yhdympkk8/QtH/OcNLbZmZ9jQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    //shape 로 객체 구체화\n    id: PropTypes.number,\n    User: PropTypes.object,\n    contnet: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/songi/Documents/nodebird/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Popover","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","ButtonGroup","PropTypes","useSelector","PostImages","PostCard","post","state","user","me","id","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","Images","images","User","nickname","content","propTypes","shape","number","object","contnet","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport {\n  RetweetOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  EllipsisOutlined,\n} from \"@ant-design/icons\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\n\nconst PostCard = ({ post }) => {\n  const { me } = useSelector((state) => state.user);\n  const id = me?.id; //new!! optional changin 연산자\n  // const id = useSelector ((state)=>state.user.me?.id);\n\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n  const onToggleLike = useCallback(() => {\n    setLiked(!liked);\n  }, [liked]);\n  return (\n    <div>\n      <Card\n        cover={post.Images[0] && <PostImages image={post.images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" />,\n          liked ? (\n            <HeartOutlined\n              key=\"heart\"\n              twoToneColor=\"#eb2f96\"\n              onClick={onToggleLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" />\n          ),\n          <MessageOutlined key=\"comment\" />,\n          <Popover\n            key=\"more\"\n            content={\n              <ButtonGroup>\n                {id && post.User.id && (\n                  <>\n                    <Button>수정</Button>\n                    <Button type=\"danger\">삭제</Button>\n                  </>\n                )}\n              </ButtonGroup>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n      >\n        {/* <Image /> */}\n        {/* <Content /> */}\n        {/* <Buttons></Buttons> */}\n        <Card.Meta\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n          title={post.User.nickname}\n          description={post.content}\n        />\n      </Card>\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    //shape 로 객체 구체화\n    id: PropTypes.number,\n    User: PropTypes.object,\n    contnet: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}