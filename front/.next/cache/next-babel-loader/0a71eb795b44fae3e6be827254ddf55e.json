{"ast":null,"code":"var _jsxFileName = \"/Users/songi/Documents/nodebird/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect } from \"react\";\nimport { Input, Form, Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useInput from \"../hooks/useInput\"; // eslint-disable-next-line no-unused-vars\n\nimport { ADD_COMMENT_REQUEST, addComment } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    }); // 액션객체로 놓는 방법 / 불러오는 방법\n  }, [commentText, id]);\n  useEffect(() => {\n    if (addCommentDone) setCommentText(\"\");\n  }, [addCommentDone]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/songi/Documents/nodebird/front/components/CommentForm.js"],"names":["React","useCallback","useEffect","Input","Form","Button","PropTypes","useSelector","useDispatch","useInput","ADD_COMMENT_REQUEST","addComment","CommentForm","post","id","state","user","me","addCommentDone","dispatch","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB,C,CACA;;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,kBAAhD;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMC,EAAE,GAAGP,WAAW,CAAEQ,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqBX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAtC;AACA,QAAMM,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM,CAACY,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDb,QAAQ,CAAC,EAAD,CAAnE;AAEA,QAAMc,eAAe,GAAGtB,WAAW,CAAC,MAAM;AACxCuB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACC,EAAjB,EAAqBM,WAArB;AACAD,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEhB,mBADC;AAEPiB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEhB,IAAI,CAACC,EAArC;AAAyCgB,QAAAA,MAAM,EAAEhB;AAAjD;AAFC,KAAD,CAAR,CAFwC,CAKpC;AACL,GANkC,EAMhC,CAACM,WAAD,EAAcN,EAAd,CANgC,CAAnC;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,cAAJ,EAAoBI,cAAc,CAAC,EAAD,CAAd;AACrB,GAFQ,EAEN,CAACJ,cAAD,CAFM,CAAT;AAIA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEZ,WAAvB;AAAoC,IAAA,QAAQ,EAAEC,mBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF;AAUD,CA7BD;;AA+BAT,WAAW,CAACqB,SAAZ,GAAwB;AACtBpB,EAAAA,IAAI,EAAEP,SAAS,CAAC4B,MAAV,CAAiBC;AADD,CAAxB;AAIA,eAAevB,WAAf","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { Input, Form, Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\n// eslint-disable-next-line no-unused-vars\nimport { ADD_COMMENT_REQUEST, addComment } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const { addCommentDone } = useSelector((state) => state.post);\n  const dispatch = useDispatch();\n\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    }); // 액션객체로 놓는 방법 / 불러오는 방법\n  }, [commentText, id]);\n\n  useEffect(() => {\n    if (addCommentDone) setCommentText(\"\");\n  }, [addCommentDone]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea value={commentText} onChange={onChangeCommentText} />\n        <Button type=\"primary\" htmlType=\"submit\">\n          삐약\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}